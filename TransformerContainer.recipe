#header
Bootstrap: docker
From: tensorflow/tensorflow:2.17.0-gpu

#Sections

%help
OS: Ubuntu 22.04.5 LTS
Cuda: 12.4
Tensorflow-gpu: 2.17
Keras: 3.4.1
Python: 3.11
PyTorch 2.4.0+cu124
OpenCV 4.10.0

%setup
# commands ecexuted on the host system after os has been installed

%files
# copy files from the host system here

# use de repository servers since the official ones are not working in the moment  de.archive.ubuntu.com
#/common/singularityImages/recipes/sources.list /etc/apt/sources.list


%labels
# information labels about the container  saved in /.singularity.d/labels.json
  maintainer Martin Messmer <martin.messmer@uni-tuebingen.de>
  Version v0.1
  overwrite False 
  tensorflow_gpu.version 2.17
  keras.version 3.4.1
  pytorch.version 2.4.0+cu124
  python.version 3.11
  opencv.version 4.10.0

%environment
# set environment variables

%post
#commands executed inside the container after os has been installed. Used for setup of the container

apt-get update --fix-missing
export DEBIAN_FRONTEND=noninteractive
ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
apt-get install -y tzdata
dpkg-reconfigure --frontend noninteractive tzdata

apt-get -y install python3.10
apt-get -y install python3-opencv

pip install --upgrade pip
pip install scipy==1.14.1
pip install opencv-contrib-python
pip install keras
pip install pyro4
pip install pandas
pip install torch
pip install nibabel
pip install imgaug
pip install scikit-image
pip install scikit-learn
pip install tensorflow-addons 
pip install Cython
pip install tensorboardX
pip install zarr
pip install tables
pip install pycocotools
pip install tqdm
pip install match
pip install transformers
pip install hydra-core
pip install omegaconf
pip install pysam
pip install intervaltree
pip install torch-tb-profiler

apt -y install git
apt -y install build-essential
apt -y install swig


echo '------------------------------------------------------------------'
echo 'Versions of installed tools:'
echo 'Python:'
echo '$(python --version)'
echo 'Python3:'
echo '$(python3 --version)'
echo 'setuptools:' $(pip show setuptools | grep Version)
echo 'pandas:' $(pip show pandas | grep Version)
echo 'pyro4:' $(pip show pyro4 | grep Version)
echo 'tensorflow-gpu:' $(pip show tensorflow-gpu | grep Version)
echo 'torch:' $(pip show torch | grep Version)
echo 'keras:' $(pip show keras | grep Version)
echo 'cuda:' $(nvcc --version)
echo 'opencv:'
python3 -c 'import cv2
print(cv2.__version__)'
echo 'cudnn:' $(find /usr -name "*cudnn.so.*")
echo '------------------------------------------------------------------'

%runscript
# commands that are run when container's run command is used
